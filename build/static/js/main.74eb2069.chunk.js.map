{"version":3,"sources":["components/Navbar.js","components/Info.js","components/Sell.js","components/Buy.js","components/Purchased.js","components/Main.js","components/App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","href","target","rel","id","this","props","account","Component","Info","Sell","_this","onSubmit","event","preventDefault","name","productName","value","price","window","web3","utils","toWei","productPrice","toString","createProduct","type","ref","input","placeholder","required","Buy","scope","products","map","product","key","fromWei","owner","userAccount","toLowerCase","purchased","onClick","purchaseProduct","console","log","Purchased","ownedProducts","Main","components_Info","components_Sell","components_Buy","components_Purchased","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","productCount","loading","bind","assertThisInitialized","loadWeb3","loadBlockchainData","ethereum","Web3","enable","currentProvider","alert","request","method","accounts","setState","abi","Marketplace","eth","net","getId","networkId","networkData","networks","marketplace","Contract","address","methods","i","concat","toConsumableArray","_this2","send","from","once","receipt","_this3","components_Navbar","role","components_Main","Boolean","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.74eb2069.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass Navbar extends Component {\n  \n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n          <a\n            className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n            href=\"/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Blockchain Marketplace\n          </a>\n          <ul className=\"navbar-nav px-3\">\n            <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n              <small className=\"text-white\"><span id=\"account\"> Welcome {this.props.account} !</span></small>\n            </li>\n          </ul>\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from 'react';\nimport './App.css';\n\nclass Info extends Component {\n  render() {\n    return (\n\t<div>\n\t\t<p className='info box'>\n\t\tHi, Welcome to the decentralised marketplace running on the Ethereum network. This is a <b>non-live instance deployed in the Sepolia Test Network</b>. Any purchase/action taken here will not be reflected in the Ethereum main network. If you are new to Ethereum, you can learn more about test/main networks <a href='https://ethereum.org/en/developers/docs/networks/'>here</a>.\n\t\t</p>\n\t</div>\n    );\n  }\n}\n\nexport default Info;\n","import React, { Component } from 'react';\nimport './App.css';\n\nclass Sell extends Component {\n  render() {\n    return (\n\t\t<div className='selling'>\n\t\t\t<h2>Sell Your Product</h2>\n\t\t\t<form onSubmit={(event) => {\n\t\t\t\tevent.preventDefault()\n\t\t\t\tconst name = this.productName.value\n\t\t\t\tconst price = window.web3.utils.toWei(this.productPrice.value.toString(), 'Ether')\n\t\t\t\tthis.props.createProduct(name, price)\n\t\t\t}}>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t<input\n\t\t\t\t\tid=\"productName\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tref={(input) => { this.productName = input }}\n\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\tplaceholder=\"Product name\"\n\t\t\t\t\trequired />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t<input\n\t\t\t\t\tid=\"productPrice\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tref={(input) => { this.productPrice = input }}\n\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\tplaceholder=\"Product price in Ether\"\n\t\t\t\t\trequired />\n\t\t\t\t</div>\n\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">Add Product</button>\n\t\t\t</form>\n\t\t  </div>\n    );\n  }\n}\n\nexport default Sell;\n","import React, { Component } from 'react';\nimport './App.css';\n\nclass Buy extends Component {\n  render() {\n    return (\n\t\t<div className='buy'>\n\t\t<h2>Available Products in the Marketplace</h2>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Price</th>\n            <th scope=\"col\">Owner</th>\n            <th scope=\"col\"></th>\n          </tr>\n        </thead>\n        <tbody id=\"productList\">\n          {this.props.products.map((product, key) => {\n            return (\n            <tr key={key}>\n              <th scope=\"row\">{product.id.toString()}</th>\n              <td>{product.name.toString()}</td>\n              <td>{window.web3.utils.fromWei(product.price.toString(), 'Ether')} Eth</td>\n              <td>{product.owner.toString()}</td>\n              <td>\n                {this.props.userAccount.toString() !== product.owner.toString().toLowerCase() && !product.purchased\n                ? <button \n                  name = {product.id}\n                  value = {product.price}\n                  onClick={(event) => {\n                      this.props.purchaseProduct(event.target.name, event.target.value)\n                      console.log(this.props.userAccount)\n                  }}>\n                  Buy\n                  </button>\n                : null\n                }\n              </td>\n            </tr>\n            )\n          })}\n        </tbody>\n      </table>\n\t\t</div>\n    );\n  }\n}\n\nexport default Buy;\n","import React, { Component } from 'react';\nimport './App.css';\n\nclass Purchased extends Component {\n  render() {\n    return (\n\t<div className='purchased'>\n\t\t<h2>Purchased Products</h2>\n\t\t<table className=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Price</th>\n            <th scope=\"col\"></th>\n          </tr>\n        </thead>\n        <tbody id=\"productList\">\n          {this.props.ownedProducts.map((product, key) => {\n            return (\n\t\t\t\t<tr key={key}>\n\t\t\t\t<th scope=\"row\">{product.id.toString()}</th>\n\t\t\t\t<td>{product.name.toString()}</td>\n\t\t\t\t<td>{window.web3.utils.fromWei(product.price.toString(), 'Ether')} Eth</td>\n\t\t\t  </tr>\n            )\n          })}\n        </tbody>\n      </table>\n\t</div>\n    );\n  }\n}\n\nexport default Purchased;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Info from './Info.js'\nimport Sell from './Sell.js'\nimport Buy from './Buy.js'\nimport Purchased from './Purchased';\n\nclass Main extends Component {\n  render() {\n    return (\n    <div id=\"content\">\n        <Info/>\n\n        <Sell\n        createProduct = {this.props.createProduct}/>\n        \n        <Buy \n        userAccount={this.props.userAccount}\n        products = {this.props.products}\n        createProduct = {this.props.createProduct}\n        purchaseProduct = {this.props.purchaseProduct}/>\n\n        <Purchased \n        userAccount={this.props.userAccount}\n        products = {this.props.products}\n        createProduct = {this.props.createProduct}\n        purchaseProduct = {this.props.purchaseProduct}\n        ownedProducts = {this.props.ownedProducts}/>\n\n    </div>\n    );\n  }\n}\n\nexport default Main;\n","import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport './App.css';\nimport Marketplace from '../artifacts/Marketplace.json'\nimport Navbar from './Navbar.js'\nimport Main from './Main.js'\n\nclass App extends Component {\n\n  async componentWillMount() {\n    // This is a lifecycle component - part of React\n    // This is run everytime the component gets created\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n    // window.alert(\"Please ensure you are connected to the Sepolia Test Net.\")\n  }\n  \n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n\n  async loadBlockchainData() {\n    const ethereum = window.ethereum\n    const web3 = window.web3\n\n    // get the accounts\n    const accounts = await ethereum.request({ method: 'eth_accounts' });\n    this.setState({account : accounts[0]})\n\n    // get the contract data\n    const abi = Marketplace.abi\n    const networkId = await web3.eth.net.getId()\n    const networkData = Marketplace.networks[networkId]\n    if (networkData) {\n      const marketplace = web3.eth.Contract(abi, networkData.address)\n      this.setState({marketplace}) // shorthand for this.setState({marketplace : marketplace})\n      const productCount = await marketplace.methods.productCount().call()\n      // Load the products\n      for(var i = 1; i <= productCount; i++) {\n        const product = await marketplace.methods.products(i).call()\n        this.setState({\n          products : [...this.state.products, product]\n        })\n        if (product.owner.toString().toLowerCase() === this.state.account && product.purchased) {\n          this.setState({\n            ownedProducts : [...this.state.ownedProducts, product]\n          })\n        }\n      }\n      \n      this.setState({loading : false})\n      // console.log(this.state.products)\n    } else {\n      window.alert(\"Marketplace contract not deployed to detected network!! Please ensure you are connected to the Sepolia Testnet.\")\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account : '',\n      productCount : 0,\n      products : [],\n      ownedProducts : [],\n      loading : true\n    };\n\n    this.createProduct = this.createProduct.bind(this)\n    this.purchaseProduct = this.purchaseProduct.bind(this)\n  }\n\n  createProduct(name, price) {\n    this.setState({loading : true})\n    this.state.marketplace.methods.createProduct(name, price).send({from : this.state.account})\n    .once('receipt', (receipt) => { \n      this.setState({loading : false})\n    })\n  }\n\n  purchaseProduct(id, price) {\n    this.setState({loading : true})\n    this.state.marketplace.methods.purchaseProduct(id).send({from : this.state.account, value : price})\n    .once('receipt', (receipt) => { \n      this.setState({loading : false})\n    })\n  }\n  \n  render() {\n    return (\n      <div>\n        <Navbar account={this.state.account}/>\n        <div className=\"container-fluid mt-5\">\n          <div className=\"row\">\n            <main role=\"main\" className=\"col-lg-12 d-flex\">\n              { this.state.loading \n                ? <div id='loader' className='text-center'><p className='text-center'>Loading...</p></div>\n                : <Main \n                  userAccount={this.state.account}\n                  products = {this.state.products}\n                  createProduct = {this.createProduct}\n                  purchaseProduct = {this.purchaseProduct}\n                  ownedProducts = {this.state.ownedProducts}/>\n              }\n            </main>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}